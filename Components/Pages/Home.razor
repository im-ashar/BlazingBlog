@page "/"

@inject IBlogPostService BlogPostService

<PageTitle>Home</PageTitle>
@if (_first is not null)
{
    <div class="container card shadow border border-1 rounded rounded-2 bg-lightblue">
        <div class="jumbotron m-3 py-0 position-relative">
            <div class="h-100 tofront">
                <div class="row justify-content-between">
                    <div class="col-md-6 pt-6 pb-6 align-self-center">
                        <h1 class="secondfont mb-3 fw-bolder">@_first.Title</h1>
                        <p class="mb-3">
                            @_first.Introduction
                        </p>
                        <a href="posts/@_first.Slug" class="btn btn-dark">Read More</a>
                    </div>
                    <div class="col-md-6 d-none d-md-block pr-0 border border-dark rounded rounded-2" style="background-size:cover;background-image:url(@_first.Image);"></div>
                </div>
            </div>
        </div>
    </div>
}
@if (_featured.Length > 0)
{
    <FeaturedBlogPostsList Posts="_featured" />
}

<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-8">
            <h5 class="fw-bold spanborder"><span>Recently Published</span></h5>
            @if (_recent.Length > 0)
            {
                <BlogPostsList Posts="_recent" />
            }
        </div>
        @if (_popular.Length > 0)
        {
            <PopularBlogPostsList Posts="_popular" />
        }
    </div>
</div>
<SubscribeBox />
@code {
    private BlogPost[] _featured = [];
    private BlogPost[] _popular = [];
    private BlogPost[] _recent = [];
    private BlogPost _first = default!;


    protected override async Task OnParametersSetAsync()
    {
        var posts = await Task.WhenAll
        (
           BlogPostService.GetFeaturedBlogPostsAsync(5),
           BlogPostService.GetPopularBlogPostsAsync(4),
           BlogPostService.GetRecentBlogPostsAsync(5)
        );
        _featured = posts[0];
        _popular = posts[1];
        _recent = posts[2];
        _first = _featured.First();
    }
}