@page "/posts/{blogPostSlug}"
@using System.Web
@inject IBlogPostService BlogPostService
@inject NavigationManager NavigationManager
<PageTitle>@(_blogPost != null ? _blogPost.Title : "Details")</PageTitle>
@if (_blogPost?.Id > 0)
{
    <div class="container">
        <div class="jumbotron jumbotron-fluid mb-3 pl-0 pt-0 pb-0 bg-white position-relative">
            <div class="h-100 tofront">
                <div class="row justify-content-between">
                    <div class="col-md-6 pt-6 pb-6 pr-6 align-self-center">
                        <p class="text-uppercase fw-bold">
                            <a class="text-danger" href="@_blogPost.Category.Name-posts">@_blogPost.Category.Name</a>
                        </p>
                        <h1 class="display-4 secondfont mb-3 fw-bold">@_blogPost.Title</h1>
                        <p class="mb-3">
                            @_blogPost.Introduction
                        </p>
                        <div class="d-flex align-items-center">
                            <img class="rounded-circle" src="https://ui-avatars.com/api/?name=@HttpUtility.UrlEncode(_blogPost.User.FullName)&background=random" width="70">
                            <small class="ml-2">
                                @_blogPost.User.FullName <span class="text-muted d-block">@_blogPost.PublishedAt.ToDisplay()</span>
                            </small>
                        </div>
                    </div>
                    <div class="col-md-6 pt-6 pb-6 pr-6 align-self-center">
                        <img src="@_blogPost.Image">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container pt-4 pb-4">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <article class="article-post">
                    @((MarkupString)_blogPost.Content)
                </article>
            </div>
        </div>
    </div>
    <SubscribeBox />
    <div class="container pt-4 pb-4">
        <h5 class="fw-bold spanborder"><span>Read next</span></h5>
        <FeaturedBlogPostsList Posts="_related" />
    </div>
}
@code {
    [Parameter]
    public string BlogPostSlug { get; set; } = default!;

    private BlogPost? _blogPost = default!;
    private BlogPost[] _related = [];

    protected override async Task OnInitializedAsync()
    {
        var result = await BlogPostService.GetBlogPostBySlugAsync(BlogPostSlug);
        if (result.IsEmpty)
        {
            NavigationManager.NavigateTo("/", replace: true);
            return;
        }
        _blogPost = result.BlogPost;
        _related = result.RelatedPosts;
    }
}